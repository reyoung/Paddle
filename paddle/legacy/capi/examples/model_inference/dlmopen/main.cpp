// Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include <dlfcn.h>
#include <stdlib.h>
#include <iostream>
#include "../common/common.h"

static void* paddle_lib;

// Modify this path as needed.
#define CONFIG_BIN "./trainer_config.bin"

typedef void* paddle_gradient_machine;
typedef int paddle_error;
paddle_error (*paddle_init)(int, char**);
paddle_error (*paddle_gradient_machine_create_for_inference)(
    paddle_gradient_machine*, void*, int);
#define kPD_NO_ERROR 0

int main() {
  paddle_lib = dlmopen(LM_ID_NEWLM, "./libpaddle_capi_shared.so", RTLD_NOW);
  if (paddle_lib == nullptr) {
    return 1;
  }

  paddle_init =
      reinterpret_cast<int (*)(int, char**)>(dlsym(paddle_lib, "paddle_init"));
  if (paddle_init == nullptr) {
    return 2;
  }

  paddle_gradient_machine_create_for_inference =
      reinterpret_cast<int (*)(paddle_gradient_machine*, void*, int)>(
          dlsym(paddle_lib, "paddle_gradient_machine_create_for_inference"));
  if (paddle_gradient_machine_create_for_inference == nullptr) {
    return 3;
  }

  char* argv[] = {"--use_gpu=False"};
  CHECK(paddle_init(1, argv));

  // Read the binary configuration file generated by `convert_protobin.sh`
  long size;
  void* buf = read_config(CONFIG_BIN, &size);

  // Create the gradient machine for inference.
  paddle_gradient_machine machine;
  CHECK(paddle_gradient_machine_create_for_inference(&machine, buf, (int)size));

  return 0;
}
